-- Script para inserir categorias de exemplo e verificar funcionamento
-- Execute este script APÃ“S executar o script anterior

-- 1. Verificar se os novos tipos foram aceitos
SELECT DISTINCT tipo FROM categorias ORDER BY tipo;

-- 2. Inserir mais categorias de exemplo para cada tipo
INSERT INTO categorias (nome, tipo, descricao, user_id) VALUES
-- ComissÃµes de Venda (receitas)
('ComissÃ£o de Vendas Diretas', 'COMISSAOVENDA', 'ComissÃµes recebidas por vendas diretas', NULL),
('ComissÃ£o de Afiliados', 'COMISSAOVENDA', 'ComissÃµes recebidas de afiliados', NULL),
('ComissÃ£o de Parcerias', 'COMISSAOVENDA', 'ComissÃµes recebidas de parcerias comerciais', NULL),
('ComissÃ£o de Indicadores', 'COMISSAOVENDA', 'ComissÃµes recebidas por indicaÃ§Ãµes', NULL),

-- ComissÃµes de Custo (despesas)
('ComissÃ£o de Vendedores', 'COMISSAOCUSTO', 'ComissÃµes pagas aos vendedores', NULL),
('ComissÃ£o de Representantes', 'COMISSAOCUSTO', 'ComissÃµes pagas aos representantes', NULL),
('ComissÃ£o de Marketing Digital', 'COMISSAOCUSTO', 'ComissÃµes pagas por marketing digital', NULL),
('ComissÃ£o de AgÃªncias', 'COMISSAOCUSTO', 'ComissÃµes pagas a agÃªncias parceiras', NULL)
ON CONFLICT (nome, tipo, user_id) DO NOTHING;

-- 3. Verificar todas as categorias organizadas por tipo
SELECT 
    CASE 
        WHEN tipo = 'CUSTO' THEN 'ðŸŸ¥ CUSTO (Despesas)'
        WHEN tipo = 'VENDA' THEN 'ðŸŸ¢ VENDA (Receitas)'
        WHEN tipo = 'COMISSAOVENDA' THEN 'ðŸŸ¦ COMISSAOVENDA (Receitas de ComissÃ£o)'
        WHEN tipo = 'COMISSAOCUSTO' THEN 'ðŸŸ¨ COMISSAOCUSTO (Despesas de ComissÃ£o)'
        ELSE tipo
    END as tipo_formatado,
    COUNT(*) as quantidade,
    STRING_AGG(nome, ', ') as categorias
FROM categorias 
GROUP BY tipo 
ORDER BY 
    CASE tipo
        WHEN 'CUSTO' THEN 1
        WHEN 'COMISSAOCUSTO' THEN 2
        WHEN 'VENDA' THEN 3
        WHEN 'COMISSAOVENDA' THEN 4
        ELSE 5
    END;

-- 4. Verificar se nÃ£o hÃ¡ duplicatas
SELECT nome, tipo, COUNT(*) as quantidade
FROM categorias 
GROUP BY nome, tipo 
HAVING COUNT(*) > 1;

-- 5. Verificar estrutura final da tabela
SELECT 
    'Estrutura da tabela categorias:' as info,
    '' as detalhes
UNION ALL
SELECT 
    column_name,
    data_type || ' - ' || 
    CASE WHEN is_nullable = 'YES' THEN 'NULL' ELSE 'NOT NULL' END ||
    CASE WHEN column_default IS NOT NULL THEN ' DEFAULT ' || column_default ELSE '' END
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'categorias'
ORDER BY ordinal_position;

-- 6. Verificar constraints aplicadas
SELECT 
    'Constraints da tabela categorias:' as info,
    '' as detalhes
UNION ALL
SELECT 
    constraint_name,
    constraint_type || ' - ' || COALESCE(check_clause, 'Sem detalhes')
FROM information_schema.table_constraints tc
LEFT JOIN information_schema.check_constraints cc ON tc.constraint_name = cc.constraint_name
WHERE tc.table_schema = 'public' 
AND tc.table_name = 'categorias'
ORDER BY tc.constraint_type, tc.constraint_name; 